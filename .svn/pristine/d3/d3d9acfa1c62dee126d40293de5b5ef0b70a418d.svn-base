/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ejca.components;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.enterprise.context.ApplicationScoped;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.inject.Named;
import org.primefaces.event.FileUploadEvent;
import org.primefaces.event.TransferEvent;
import org.primefaces.model.DualListModel;

import org.primefaces.model.UploadedFile;

@Named
@ApplicationScoped
public class TestFile {
    
    

    private UploadedFile file;
    private DualListModel<CharGoT> chars;  
    
    public TestFile(){
            List<CharGoT> source = new ArrayList<CharGoT>();  
        List<CharGoT> target = new ArrayList<CharGoT>();  
          String path="/resources/img/char/";
        source.add(new CharGoT("denny", 10,path+ "denny.jpg")); 
        source.add(new CharGoT("joff", 9,path+ "joff.jpg")); 
        source.add(new CharGoT("sandor", 8,path+ "sandor.jpg")); 
        source.add(new CharGoT("imp", 7,path+ "imp.jpg")); 
        source.add(new CharGoT("bran", 6,path+ "bran.jpg")); 
        source.add(new CharGoT("aria", 5,path+ "aria.jpg")); 
        source.add(new CharGoT("jamie", 4,path+ "jamie.jpg"));    
          
        chars = new DualListModel<CharGoT>(source, target); 
    }

    public DualListModel<CharGoT> getChars() {
        return chars;
    }

    public void setChars(DualListModel<CharGoT> chars) {
        this.chars = chars;
    }
    public UploadedFile getFile() {
        return file;
    }

    public void setFile(UploadedFile file) {
        this.file = file;
    }

    public void upload() {
        System.out.println("enter Upload....");
        if (file != null) {

            FacesMessage msg = new FacesMessage("Succesful", file.getFileName() + " is uploaded.");
            FacesContext.getCurrentInstance().addMessage(null, msg);
        }
    }

    public void handleFileUpload(FileUploadEvent event) {
        try {
            String path = FacesContext.getCurrentInstance().getExternalContext().getRealPath("/");            
            System.out.println("enter Upload....2path="+path);
            copyFile(path+event.getFile().getFileName(), event.getFile().getInputstream());
            FacesMessage msg = new FacesMessage("Succesful", event.getFile().getFileName() + " is uploaded.");
            FacesContext.getCurrentInstance().addMessage(null, msg);
        } catch (IOException ex) {
            Logger.getLogger(TestFile.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void copyFile(String fileName, InputStream in) {
        try {
            System.out.println("sad");
            OutputStream out = new FileOutputStream(new File(fileName));
            System.out.println("sad2.0");

            int read =   0;
            byte[] bytes = new byte[1024];

            while ((read = in.read(bytes)) != -1) {
                out.write(bytes, 0, read);
            }

            in.close();
            out.flush();
            out.close();

            System.out.println("New file created!");
        } catch (IOException e) {
            System.out.println(e.getMessage());
        }
    }
    
        public void onTransfer(TransferEvent event) {  
        StringBuilder builder = new StringBuilder();  
        for(Object item : event.getItems()) {  
            builder.append(((CharGoT) item).getName()).append("<br />");  
        }  
          
        FacesMessage msg = new FacesMessage();  
        msg.setSeverity(FacesMessage.SEVERITY_INFO);  
        msg.setSummary("Items Transferred");  
        msg.setDetail(builder.toString());  
          
        FacesContext.getCurrentInstance().addMessage(null, msg);  
    }  
}
