SET SCHEMA ejca;


DROP TABLE DISCUSSION_PERSON;
DROP TABLE SURVEY_RESPONSE;
DROP TABLE SOLICIT_ATTEND_RESPONSE;
DROP TABLE SOLICIT_NOTATTEND_RESPONSE;
DROP TABLE SURVEY_OPTIONS;
DROP TABLE SURVEY_BUBBLE;
DROP TABLE TEXT_BUBBLE;
DROP TABLE SOLICIT_BUBBLE;
DROP TABLE MEDIA_BUBBLE;
DROP TABLE COMMENT;
DROP TABLE DISCUSSION;
DROP TABLE PERSON;


CREATE TABLE PERSON (
ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), 
"NAME" VARCHAR(30) NOT NULL, 
"ROLE" VARCHAR(10) NOT NULL, 
PRIMARY KEY (ID));

CREATE TABLE DISCUSSION (
ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), 
TITLE VARCHAR(30) NOT NULL, 
DESCRIPTION VARCHAR(50), 
CREATOR_ID INTEGER NOT NULL, 
CREATED_TIME TIMESTAMP NOT NULL, 
PRIMARY KEY (ID),
constraint discussion_id_person_id foreign key (CREATOR_ID) references person(id)
);

CREATE TABLE COMMENT (
ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
EDITABLE CHAR(1) DEFAULT 'Y'  NOT NULL,
CREATED_TIME TIMESTAMP NOT NULL,
LAST_EDITED_TIME TIMESTAMP NOT NULL,
COMMENT_TYPE DECIMAL(1) NOT NULL,
CREATOR_ID INTEGER NOT NULL,
LAST_EDITOR_ID INTEGER,
discussion_id INTEGER NOT NULL UNIQUE,
parent_comment_id INTEGER,
PRIMARY KEY (ID),
constraint CREATOR_ID_person_id foreign key (CREATOR_ID) references person(id),
constraint LAST_EDITOR_ID_person_id foreign key (LAST_EDITOR_ID) references person(id),
constraint discussion_id_discussion_id foreign key (discussion_id) references discussion(id),
constraint parent_comment_id_comment_id foreign key (parent_comment_id) references COMMENT(id)
);

CREATE TABLE DISCUSSION_PERSON (
DISCUSSION_ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), 
PERSON_ID INTEGER NOT NULL,
constraint DISCUSSIONID_DISCUSSIONID foreign key (DISCUSSION_ID) references discussion(id),
constraint PERSON_ID_PERSON_ID foreign key (PERSON_ID) references person(id)
);

CREATE TABLE TEXT_BUBBLE (
--ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), 
COMMENT_ID INTEGER NOT NULL,
MESSAGE VARCHAR(100) NOT NULL, 
PRIMARY KEY (COMMENT_ID),
constraint bubble_id_comment_id foreign key (COMMENT_ID) references COMMENT(id)
);

CREATE TABLE SURVEY_BUBBLE (
--ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), 
COMMENT_ID INTEGER NOT NULL,
QUESTION VARCHAR(100) NOT NULL, 
PRIMARY KEY (COMMENT_ID),
constraint survey_comment_id foreign key (COMMENT_ID) references COMMENT(id)
);

CREATE TABLE SURVEY_OPTIONS (
ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
CHOICE VARCHAR(100) NOT NULL,
SELECTED_COUNT INTEGER NOT NULL,
PRIMARY KEY (ID),
SURVEY_BUBBLE_ID INTEGER NOT NULL,
constraint comment_id_survey_bubble_id foreign key (SURVEY_BUBBLE_ID) references SURVEY_BUBBLE(COMMENT_ID)
);

CREATE TABLE SURVEY_RESPONSE (
USER_ID INTEGER NOT NULL,
SURVEY_ID INTEGER NOT NULL,
SELECTED_OPTION INTEGER NOT NULL,
PRIMARY KEY (USER_ID, SURVEY_ID),
constraint user_response foreign key (USER_ID) references PERSON(ID),
constraint user_response_survey foreign key (SURVEY_ID) references SURVEY_BUBBLE(COMMENT_ID),
constraint user_choice foreign key (SELECTED_OPTION) references SURVEY_OPTIONS(ID)
);

CREATE TABLE MEDIA_BUBBLE (
--ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), 
COMMENT_ID INTEGER NOT NULL,
MESSAGE VARCHAR(1331) NOT NULL, 
LOCATION VARCHAR(232) NOT NULL, 
PRIMARY KEY (COMMENT_ID),
constraint media_comment_id foreign key (COMMENT_ID) references COMMENT(id)
);

CREATE TABLE SOLICIT_BUBBLE(
--ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
COMMENT_ID INTEGER NOT NULL,
MEETING_TIME TIMESTAMP NOT NULL,
MEETING_INFO VARCHAR(100) NOT NULL,
PRIMARY KEY (COMMENT_ID),
constraint solicit_comment_id foreign key (COMMENT_ID) references COMMENT(id)
);

CREATE TABLE SOLICIT_ATTEND_RESPONSE(
COMMENT_ID INTEGER NOT NULL,
PERSON_ID INTEGER NOT NULL,
PRIMARY KEY(COMMENT_ID),
constraint solicit_resp_comment_id foreign key (COMMENT_ID) references COMMENT(id),
constraint solicit_resp_person_id foreign key (PERSON_ID) references PERSON(id) 
);

CREATE TABLE SOLICIT_NOTATTEND_RESPONSE(
COMMENT_ID INTEGER NOT NULL,
PERSON_ID INTEGER NOT NULL,
PRIMARY KEY(COMMENT_ID),
constraint solicit_nresp_comment_id foreign key (COMMENT_ID) references COMMENT(id),
constraint solicit_nresp_person_id foreign key (PERSON_ID) references PERSON(id) 
);