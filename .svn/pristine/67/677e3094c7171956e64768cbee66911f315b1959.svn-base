/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ejca.bb;

import com.ejca.ejb.PersonFacade;
import com.ejca.entity.Person;
import com.ejca.util.AppConfig;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.Serializable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.enterprise.context.SessionScoped;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.inject.Inject;
import javax.inject.Named;
import org.primefaces.event.FileUploadEvent;
import org.primefaces.model.UploadedFile;

/**
 *
 * @author Rucha Kulkarni
 */
@SessionScoped
@Named("profile")
public class ProfileBB implements Serializable {
    
    private Person person;
    private UploadedFile file;
    
    @EJB PersonFacade personFacade;
    @Inject AppConfig appConfig;
    
    @PostConstruct
    public void initPerson() {
        person = personFacade.find("mike@gmail.com");
    }
    
    public Person getPerson() {
        return person;
    }

    public void setPerson(Person person) {
        this.person = person;
    }
       
    public String getProfilePic(){
        System.out.println("PICTURE LOCATION___________"+appConfig.getPROFILEPICSLoc() + person.getPicture());
        return "//"+appConfig.getPROFILEPICSLoc() + person.getPicture();
    }
    
    public void setProfilePic(String pic){
        person.setPicture(pic);
    }
    
     public UploadedFile getFile() {  
        return file;  
    }  
  
    public void setFile(UploadedFile file) {  
        this.file = file;  
    }  
      
    public void handleFileUpload(FileUploadEvent event) {
        try {
            String path = FacesContext.getCurrentInstance().getExternalContext().getRealPath("/") + appConfig.getPROFILEPICSLoc();            
            System.out.println("enter Upload....2path="+path);
            copyFile(path+event.getFile().getFileName(), event.getFile().getInputstream());
            FacesMessage msg = new FacesMessage("Succesful", event.getFile().getFileName() + " is uploaded.");
            FacesContext.getCurrentInstance().addMessage(null, msg);
            person.setPicture(event.getFile().getFileName());
        } catch (IOException ex) {
            Logger.getLogger(ProfileBB.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void copyFile(String fileName, InputStream in) {
        try {
            System.out.println("sad");
            OutputStream out = new FileOutputStream(new File(fileName));
            System.out.println("sad2.0");

            int read =   0;
            byte[] bytes = new byte[1024];

            while ((read = in.read(bytes)) != -1) {
                out.write(bytes, 0, read);
            }

            in.close();
            out.flush();
            out.close();

            System.out.println("New file created!");
        } catch (IOException e) {
            System.out.println(e.getMessage());
        }
    }
    
    public String save(){
        personFacade.edit(person);
        return "/page/userprofile.xhtml";
    }

}
