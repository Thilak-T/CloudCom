/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ejca.entity;

import java.io.Serializable;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.DiscriminatorValue;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;

/**
 *
 * @author Thilak
 */
@Entity
//@DiscriminatorValue("T")
@Table(name = "TEXT_BUBBLE")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "TextBubble.findAll", query = "SELECT t FROM TextBubble t"),
//    @NamedQuery(name = "TextBubble.findByCommentId", query = "SELECT t FROM TextBubble t WHERE t.comment.id = :commentId"),
    @NamedQuery(name = "TextBubble.findByMessage", query = "SELECT t FROM TextBubble t WHERE t.message = :message")})
public class TextBubble extends Bubble implements Serializable {
    private static final long serialVersionUID = 1L;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "MESSAGE")
    private String message;

    public TextBubble() {
    }

//    public TextBubble(Comment comment) {
//    this.comment = comment;
//    }

    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }

    @Override
    public int hashCode() {
        int hash = 0;
//        hash += (this.comment.getId() != null ? this.comment.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
//        if (!(object instanceof TextBubble)) {
//            return false;
//        }
//        TextBubble other = (TextBubble) object;
//        if ((this.comment.getId() == null && other.comment.getId() != null) || (this.comment.getId() != null && !this.comment.getId().equals(other.comment.getId()))) {
//            return false;
//        }
        return true;
    }

//    @Override
//    public String toString() {
//        return "com.ejca.entities.TextBubble[ commentId=" + this.comment.getId() + " ]";
//    }
    
}
