/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ejca.bb;

import com.ejca.ejb.DiscussionFacade;
import com.ejca.ejb.PersonFacade;
import com.ejca.entity.Discussion;
import com.ejca.entity.Person;
import java.io.Serializable;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.enterprise.context.RequestScoped;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.inject.Named;
import org.primefaces.event.ColumnResizeEvent;
import org.primefaces.event.SelectEvent;
import org.primefaces.model.DualListModel;
import org.primefaces.model.LazyDataModel;

/**
 *
 * @author mido
 */
@RequestScoped
@Named("homepage")
public class HomepageBB implements Serializable {

    @EJB
    private DiscussionFacade ejbDiscussion;
    @EJB
    private PersonFacade ejbPerson;
    private List<Discussion> discussions;
    private Person user;
    private Discussion selectedDiscussion;
    private DiscussionDM lazyModel;

    public DiscussionDM getLazyModel() {
        return lazyModel;
    }

    public void setLazyModel(DiscussionDM lazyModel) {
        this.lazyModel = lazyModel;
    }

    @PostConstruct
    public void init() {
        lazyModel=new DiscussionDM() ;
        //user = ejbPerson.find(7);
        Person creator;


        try {
        discussions=ejbDiscussion.findAll();
            //user = ejbPerson.find("snow@got.com");  // CHANGE
            //discussions=ejbDiscussion.findAll(); // CHANGE
        } catch (Exception e) {
            e.printStackTrace();
        }

    }
    
    private String showDiscussion(){
        
        return "/page/createDiscussion";
    }

    public String gotoCreateDiscussion() {
        return "/page/createDiscussion";
    }

    public void onRowSelect(SelectEvent event) { // Not used for now
        FacesMessage msg = new FacesMessage("Discussion Selected", ((Discussion) event.getObject()).getTitle());
        FacesContext.getCurrentInstance().addMessage(null, msg);
    }
    public void onResize(ColumnResizeEvent event) { //TRY to PERSIST foR USERS SETTINGS
        FacesMessage msg = new FacesMessage("Column " + event.getColumn().getClientId() + " resized", "W:" + event.getWidth() + ", H:" + event.getHeight());

        FacesContext.getCurrentInstance().addMessage(null, msg);
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    public List<Discussion> getDiscussions() {
        return discussions;
    }

    public void setDiscussions(List<Discussion> discussions) {
        this.discussions = discussions;
    }

    public Person getUser() {
        return user;
    }

    public void setUser(Person user) {
        this.user = user;
    }

    public Discussion getSelectedDiscussion() {
        return selectedDiscussion;
    }

    public void setSelectedDiscussion(Discussion selectedDiscussion) {
        this.selectedDiscussion = selectedDiscussion;
    }

}
