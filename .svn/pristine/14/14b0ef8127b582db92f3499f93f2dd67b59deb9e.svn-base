/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ejca.bb;

import com.ejca.ejb.PersonFacade;
import com.ejca.entity.Person;
import com.ejca.util.AppConfig;
import com.ejca.util.FileUploadUtil;
import java.io.IOException;
import java.io.Serializable;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.enterprise.context.SessionScoped;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.inject.Inject;
import javax.inject.Named;
import org.primefaces.event.FileUploadEvent;
import org.primefaces.model.UploadedFile;

/**
 *
 * @author Rucha Kulkarni
 */
@SessionScoped
@Named("profile")
public class ProfileBB implements Serializable {

    private Person person;
    private UploadedFile file;
    private FileUploadUtil fileUploadUtil;

    @EJB
    PersonFacade personFacade;
    @Inject
    UserBean userBean;
    @Inject
    AppConfig appConfig;

    @PostConstruct
    public void initPerson() {
        person = userBean.getUser();
        fileUploadUtil = new FileUploadUtil();
    }

    public Person getPerson() {
        return person;
    }

    public void setPerson(Person person) {
        this.person = person;
    }

    public String getProfilePic() {
        //System.out.println("PICTURE LOCATION___________" + appConfig.getMEDIALoc() + person.getPicture());
        return person.getPicture();
    }

    public void setProfilePic(String pic) {
        person.setPicture(pic);
    }

    public UploadedFile getFile() {
        return file;
    }

    public void setFile(UploadedFile file) {
        this.file = file;
    }

    public void handleFileUpload(FileUploadEvent event) {
//        try {
//            //String path = FacesContext.getCurrentInstance().getExternalContext().getRealPath("/") + appConfig.getMEDIALoc();
//            String path = appConfig.getMEDIALoc();
//            System.out.println("enter Upload....2path=" + path);
//            fileUploadUtil.copyFile(path + event.getFile().getFileName(), event.getFile().getInputstream());
//            FacesMessage msg = new FacesMessage("Successful", event.getFile().getFileName() + " is uploaded.");
//            FacesContext.getCurrentInstance().addMessage(null, msg);
//            person.setPicture(event.getFile().getFileName());
//        } catch (IOException ex) {
//            Logger.getLogger(ProfileBB.class.getName()).log(Level.SEVERE, null, ex);
//        }
        try {
        String orgName = event.getFile().getFileName();
        String fileName = UUID.randomUUID().toString() + orgName.substring(orgName.lastIndexOf('.'));

        fileUploadUtil.copyFile(new AppConfig().getMEDIALoc() + fileName, event.getFile().getInputstream());

        person.setPicture(fileName);
        FacesMessage msg = new FacesMessage("Succesful", event.getFile().getFileName() + " is uploaded.");
        FacesContext.getCurrentInstance().addMessage(null, msg);
        } catch(IOException e) {
            Logger.getLogger(ProfileBB.class.getName()).log(Level.SEVERE, null, e);
        }
    }

//    public void copyFile(String fileName, InputStream in) {
//        try {
//            System.out.println("sad");
//            OutputStream out = new FileOutputStream(new File(fileName));
//            System.out.println("sad2.0");
//
//            int read = 0;
//            byte[] bytes = new byte[1024];
//
//            while ((read = in.read(bytes)) != -1) {
//                out.write(bytes, 0, read);
//            }
//
//            in.close();
//            out.flush();
//            out.close();
//
//            System.out.println("New file created!");
//        } catch (IOException e) {
//            System.out.println(e.getMessage());
//        }
//    }
    public String save() {
        personFacade.edit(person);
        return "/page/userprofile.xhtml";
    }

}
